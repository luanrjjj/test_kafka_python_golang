version: '3.8'

services:
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:2.12-2.5.0
    networks:
      - kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "test-topic:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  go-app:
    build: ./go-app
    depends_on:
      - kafka

  python-app:
    build: ./python-app
    depends_on:
      - kafka

      
  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8080:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181

  # kafka-ui:
  #   container_name: kafka-ui
  #   image: provectuslabs/kafka-ui:latest
  #   volumes:
  #     - ./kafka-ui/config.yml:/etc/kafkaui/dynamic_config.yaml
  #   environment:
  #     DYNAMIC_CONFIG_ENABLED: 'true'
  #   depends_on:
  #     - kafka
  #   networks:
  #     - kafka
  #   ports:
  #     - '8080:8080'
  #   healthcheck:
  #     test: wget --no-verbose --tries=1 --spider localhost:8080 || exit 1
  #     interval: 5s
  #     timeout: 10s
  #     retries: 3
  #     start_period: 30s
